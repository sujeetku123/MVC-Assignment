@model BusMVCCrudOperation.Context.BusTracking
@{
    ViewBag.Title = "Bus";
}
<style>
    .error{
        color:red;
    }
</style>
<h2>MYBus Portal</h2>
@using (Html.BeginForm("AddBus", "Bus", FormMethod.Post))
{
    
    <div class="container">
        <div class="form-group">
            @Html.HiddenFor(x=>x.BusID)
            <label>BoardingPoint</label>
             @Html.ValidationMessageFor(x => x.BoardingPoint, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.BoardingPoint, new { @class = "form-control" })

        </div>
        <div class="form-group">

            <label>Travel Date</label>
            @Html.ValidationMessageFor(x => x.TravelDate, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.TravelDate, new { @class = "form-control" })

        </div>
        <div class="form-group">
            <label>Amount</label>
           @Html.ValidationMessageFor(x => x.Amount, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Amount, new { @class = "form-control" })

        </div>
        <div class="form-group">
            <label>Rating</label>
            @Html.ValidationMessageFor(x => x.Rating, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Rating, new { @class = "form-control" })

        </div>

        <div class="form-group">
            <button class="btn btn-primary" type="submit">Submit</button>
            <button class="btn btn-primary" type="reset">Cancel</button>
        </div>



    </div>

}
